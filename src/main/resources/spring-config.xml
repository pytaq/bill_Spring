<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <!--    配置数据源、连接池-->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql:///smbms?useUnicode=true&amp;charcaterEncoding=utf-8e&amp;useSSL=falsee&amp;serverTimezone=UTC"/>
        <property name="username" value="root"/>
        <property name="password" value="123"/>
    </bean>

    <!--    配置SqlSessionFactoryBean-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--    引用数据源组件-->
        <property name="dataSource" ref="dataSource"/>
        <!--    引用MyBatis配置文件中的配置-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--    配置SQL映射文件信息-->
        <property name="mapperLocations">
<!--            mapperLocations是Resource[]类型-->
            <list>
                <value>classpath:cn/gwj/dao/**/*.xml</value>
            </list>
        </property>
    </bean>

    <!--    配置dao-->


    <!--    配置业务-->

    <context:component-scan base-package="cn.gwj"/>
<!--&lt;!&ndash;    User。定义User bean，该bean的id是user ，class指定该bean实例的实现类&ndash;&gt;-->
<!--&lt;!&ndash;    也可以通过name获取，name可以设置多个值，用逗号隔开&ndash;&gt;-->
<!--    <bean id="user" class="cn.gwj.entity.User" name="t1,t2">-->
<!--        &lt;!&ndash; property元素用来为实例的属性赋值,此处实际是调用setuserName()方法实现赋值操作 &ndash;&gt;-->
<!--        &lt;!&ndash; 设值注入 此处将字符串"张三"赋值给userName属性 &ndash;&gt;-->
<!--        <property name="userName" value="张三"/>-->
<!--        <property name="gender" value="0"/>-->
<!--&lt;!&ndash;        通过ref属性注入已经定义好的bean&ndash;&gt;-->
<!--        <property name="role" ref="role0"/>-->

<!--    </bean>-->

<!--    <bean id="role0" class="cn.gwj.entity.Role">-->
<!--        <property name="roleCode" value="ds"/>-->
<!--        <property name="roleName" value="系统管理员"/>-->

<!--    </bean>-->

<!--    <bean id="userDao" class="cn.gwj.dao.UserDaoImpl"/>-->
<!--    <bean id="userService" class="cn.gwj.service.user.UserServiceImpl">-->
<!--&lt;!&ndash;        构造注入 给构造方法传入参数 userDao &ndash;&gt;-->
<!--        <constructor-arg type="java.lang.String" index="1" value="zs"/>-->
<!--        <constructor-arg type="cn.gwj.dao.UserDao" index="0" ref="userDao"/>-->
<!--    </bean>-->

<!--&lt;!&ndash;    <bean id="userService" class="cn.gwj.service.user.UserServiceImpl"/>&ndash;&gt;-->
<!--    <bean id="aopLogger" class="cn.gwj.aop.AopLogger"/>-->

<!--&lt;!&ndash;    配置切面&ndash;&gt;-->
<!--    <aop:config>-->
<!--&lt;!&ndash;        定义切入点（某方法）  参数类型要传其全路径&ndash;&gt;-->
<!--&lt;!&ndash;        <aop:pointcut id="addPo" expression="execution(public String add(java.lang.String))"/>&ndash;&gt;-->
<!--        <aop:pointcut id="addPo" expression="execution(* cn.gwj.service..*.*(..))"/>-->
<!--&lt;!&ndash;        引用包含增强方法的bean&ndash;&gt;-->
<!--        <aop:aspect ref="aopLogger">-->
<!--&lt;!&ndash;            定义前置增强   pointcut-ref已经定义的切点方法&ndash;&gt;-->
<!--            <aop:before method="before" pointcut-ref="addPo"/>-->
<!--&lt;!&ndash;            定义后置增强   pointcut-ref已经定义的切点方法 returning在增强方法里面定义的返回值参数&ndash;&gt;-->
<!--            <aop:after-returning method="after" pointcut-ref="addPo" returning="result"/>-->
<!--&lt;!&ndash;            定义最终增强&ndash;&gt;-->
<!--            <aop:after method="aft" pointcut-ref="addPo"/>-->
<!--&lt;!&ndash;            异常&ndash;&gt;-->
<!--            <aop:after-throwing method="exc" pointcut-ref="addPo" throwing="e"/>-->
<!--&lt;!&ndash;            环绕增强&ndash;&gt;-->
<!--            <aop:around method="around" pointcut-ref="addPo"/>-->
<!--        </aop:aspect>-->

<!--    </aop:config>-->

<!--    声明切面类-->
    <bean class="cn.gwj.aop.AopLogger"/>
<!--    开启使用注解驱动切面-->
    <aop:aspectj-autoproxy/>
</beans>